import tkinter
import customtkinter
import math
import re

customtkinter.set_appearance_mode("System")  # Modes: "System" (standard), "Dark", "Light"
customtkinter.set_default_color_theme("dark-blue")  # Themes: "blue" (standard), "green", "dark-blue"

class App(customtkinter.CTk):
    def __init__(self):
        super().__init__()

        # configure window
        self.title("Calculator")
        self.geometry(f"{400}x{500}")
        self.resizable(True, True)

        # create display
        self.display = customtkinter.CTkTextbox(self, font=customtkinter.CTkFont(size=30), state="normal")
        self.display.grid(row=0, column=0, columnspan=10, padx=10, pady=(10, 0), sticky="nsew")

        # create clear button
        self.button_clear = customtkinter.CTkButton(self, text="C", command=self.button_clear_event)
        self.button_clear.grid(row=1, column=4, padx=(5, 10), pady=(5, 5))

         # create buttons
        self.button_7 = customtkinter.CTkButton(self, text="7", command=lambda: self.button_event("7"))
        self.button_7.grid(row=1, column=0, padx=(10, 5), pady=(5, 5))
        self.button_8 = customtkinter.CTkButton(self, text="8", command=lambda: self.button_event("8"))
        self.button_8.grid(row=1, column=1, padx=(5, 5), pady=(5, 5))
        self.button_9 = customtkinter.CTkButton(self, text="9", command=lambda: self.button_event("9"))
        self.button_9.grid(row=1, column=2, padx=(5, 5), pady=(5, 5))
        self.button_divide = customtkinter.CTkButton(self, text="/", command=lambda: self.button_event("/"))
        self.button_divide.grid(row=1, column=3, padx=(5, 10), pady=(5, 5))

       # create delete button
        self.button_delete = customtkinter.CTkButton(self, text="Delete", command=self.button_delete_event)
        self.button_delete.grid(row=2, column=4, padx=(5, 10), pady=(5, 5))

        self.button_4 = customtkinter.CTkButton(self, text="4", command=lambda: self.button_event("4"))
        self.button_4.grid(row=2, column=0, padx=(10, 5), pady=(5, 5))
        self.button_5 = customtkinter.CTkButton(self, text="5", command=lambda: self.button_event("5"))
        self.button_5.grid(row=2, column=1, padx=(5, 5), pady=(5, 5))
        self.button_6 = customtkinter.CTkButton(self, text="6", command=lambda: self.button_event("6"))
        self.button_6.grid(row=2, column=2, padx=(5, 5), pady=(5, 5))
        self.button_multiply = customtkinter.CTkButton(self, text="*", command=lambda: self.button_event("*"))
        self.button_multiply.grid(row=2, column=3, padx=(5, 5), pady=(5, 5))
        self.button_1 = customtkinter.CTkButton(self, text="1", command=lambda: self.button_event("1"))
        self.button_1.grid(row=3, column=0, padx=(10, 5), pady=(5, 5))
        self.button_2 = customtkinter.CTkButton(self, text="2", command=lambda: self.button_event("2"))
        self.button_2.grid(row=3, column=1, padx=(5, 5), pady=(5, 5))
        self.button_3 = customtkinter.CTkButton(self, text="3", command=lambda: self.button_event("3"))
        self.button_3.grid(row=3, column=2, padx=(5, 5), pady=(5, 5))
        self.button_subtract = customtkinter.CTkButton(self, text="-", command=lambda: self.button_event("-"))
        self.button_subtract.grid(row=3, column=3, padx=(5, 5), pady=(5, 5))
        self.button_0 = customtkinter.CTkButton(self, text="0", command=lambda: self.button_event("0"))
        self.button_0.grid(row=4, column=0, columnspan=2, padx=(10, 5), pady=(5, 5), sticky="nsew")
        self.button_decimal = customtkinter.CTkButton(self, text=".", command=lambda: self.button_event("."))
        self.button_decimal.grid(row=4, column=2, padx=(5, 5), pady=(5, 5))
        self.button_add = customtkinter.CTkButton(self, text="+", command=lambda: self.button_event("+"))
        self.button_add.grid(row=4, column=3, padx=(5, 5), pady=(5, 5))
        self.button_equals = customtkinter.CTkButton(self, text="=", command=self.button_equals_event)
        self.button_equals.grid(row=5, column=0, columnspan=4, padx=10, pady=(5, 10), sticky="nsew")

        self.button_squared = customtkinter.CTkButton(self, text="x²", command=self.button_squared_event)
        self.button_squared.grid(row=1, column=5, padx=(5, 10), pady=(5, 5))
        self.button_square_root = customtkinter.CTkButton(self, text="√", command=self.button_square_root_event)
        self.button_square_root.grid(row=2, column=5, padx=(5, 10), pady=(5, 5))
        self.bind("<Key>", self.key_event)

    def key_event(self, event):
        # get current display text
        display_text = self.display.get("1.0", "end")

        # check if the last character in the display text is a digit or a decimal point,
        # and if the key pressed is an operator or a decimal point
        if (display_text[-1].isdigit() or display_text[-1] == ".") and (event.keysym in ["+", "-", "*", "/"] or event.keysym == "."):
            # if the last character is a digit or decimal point and the key pressed is an operator or decimal point,
            # call the button_event() method with the key pressed as the argument
            self.button_event(event.keysym)
        elif event.keysym == "Return":
            self.button_equals_event()
        elif event.keysym == "BackSpace":
            self.button_delete_event()
        elif event.keysym == "Escape":
            self.button_clear_event()






    def button_event(self, button_text):
        # get current display text
        display_text = self.display.get("1.0", "end")

        # append button text to display text
        self.display.configure(state="normal")
        self.display.insert("end", button_text)
        self.display.configure(state="normal")
    
    def button_squared_event(self):
        # get the current number displayed in the calculator's display
        current_text = self.display.get("1.0", "end")
        current_text = float(current_text)
        # calculate the square of the current number
        squared_num = current_text ** 2
        # update the display with the result of the squared operation
        self.display.delete("1.0", "end")
        self.display.insert("1.0", squared_num)

    
    def button_square_root_event(self):
        # get the current value in the display
        current_text = self.display.get("1.0", "end")
        # compute the square root of the current value and round to 2 decimal places
        squared_num = round(math.sqrt(float(current_text)), 2)

        # update the display with the squared value
        self.display.delete("1.0", "end")
        self.display.insert("1.0", str(squared_num))


    def button_delete_event(self):
        text = self.display.get("1.0", "end")
        if text:
            self.display.delete("insert-1c", "insert")

    def button_clear_event(self):
        # clear display
        self.display.configure(state="normal")
        self.display.delete("1.0", "end")
        self.display.configure(state="normal")

    def button_equals_event(self):
        # get current display text
        display_text = self.display.get("1.0", "end")

        # evaluate expression and show result
        try:
            result = eval(display_text)
            self.display.configure(state="normal")
            self.display.delete("1.0", "end")
            self.display.insert("end", result)
            self.display.configure(state="normal")
        except:
            tkinter.messagebox.showerror("Calculator", "Invalid expression")
app = App()
app.mainloop()
